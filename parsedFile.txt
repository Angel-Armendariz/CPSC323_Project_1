<Rat22F> ::= <Opt Function Definitions> $ <Opt Declaration List> <Statement List> $

Token:KEYWORD        Lexeme:function
<Opt Function Definitions> ::= <Function Definitions> | <Empty>
<Function Definitions>  ::= <Function> (<Function Definitions Prime>)
<Function> ::= function <Identifier> ( <Opt Parameter List> ) <Opt Declaration List> <Body>

Token:IDENTIFIERS        Lexeme:calculate
<IDs> ::= <Identifier> <IDs Prime>
<IDs Prime> ::= Epilson | , <IDs>
<Empty> ::= Epilson

Token:SEPARATOR        Lexeme:(
<Opt Parameter List> ::= <Parameter List> | <Empty>
<Parameter List> ::= <Parameter> ( <Parameter List Prime> )

Token:IDENTIFIERS        Lexeme:a
<Parameter> ::= <IDs> <Qualifier>
<IDs> ::= <Identifier> <IDs Prime>
<IDs Prime> ::= Epilson | , <IDs>
<Empty> ::= Epilson

Token:INT        Lexeme:2
<Qualifier> ::= integer

Token:SEPARATOR        Lexeme:,
<Parameter List Prime> ::= Episilon | ,<Parameter List>
<Parameter List> ::= <Parameter> ( <Parameter List Prime> )

Token:IDENTIFIERS        Lexeme:b
<Parameter> ::= <IDs> <Qualifier>
<IDs> ::= <Identifier> <IDs Prime>
<IDs Prime> ::= Epilson | , <IDs>
<Empty> ::= Epilson

Token:INT        Lexeme:3
<Qualifier> ::= integer

Token:SEPARATOR        Lexeme:)
<Parameter List Prime> ::= Episilon | ,<Parameter List>
<Empty> ::= Epilson

Token:SEPARATOR        Lexeme:;
<Opt Declaration List> ::= <Declaration List> | <Empty>
<Declaration List> ::= <Declaration> ; (<Declaration List Prime>)
<Declaration> ::= <Qualifier> <IDs>
<IDs> ::= <Identifier> <IDs Prime>
<IDs Prime> ::= Epilson | , <IDs>
<Empty> ::= Epilson

Token:SEPARATOR        Lexeme:{
<Declaration List Prime> ::= <Empty> | <Declaration List>
<Empty> ::= Epilson
<Body>  ::= { <Statement List> }

Token:KEYWORD        Lexeme:return
<Statement List> ::= <Statement> <Statement List Prime>
} expected at line number 23, instead of Token:KEYWORD        Lexeme:return
<Function Definition Prime> ::= Epilson | <Function Definitions>
<Empty> ::= Epilson
