Token:OPERATOR        Lexeme:/
Token:KEYWORD        Lexeme:function
Token:IDENTIFIERS        Lexeme:convert
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:fahr
Token:KEYWORD        Lexeme:integer
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:return
Token:INT        Lexeme:5
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:fahr
Token:OPERATOR        Lexeme:-
Token:INT        Lexeme:32
Token:SEPARATOR        Lexeme:)
Token:OPERATOR        Lexeme:/
Token:INT        Lexeme:9
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:KEYWORD        Lexeme:function
Token:IDENTIFIERS        Lexeme:convertx
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:x
Token:KEYWORD        Lexeme:real
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:y
Token:KEYWORD        Lexeme:boolean
Token:SEPARATOR        Lexeme:)
Token:KEYWORD        Lexeme:boolean
Token:IDENTIFIERS        Lexeme:k
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:z
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:real
Token:IDENTIFIERS        Lexeme:x
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:if
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:x
Token:OPERATOR        Lexeme:>
Token:IDENTIFIERS        Lexeme:y
Token:SEPARATOR        Lexeme:)
Token:IDENTIFIERS        Lexeme:x
Token:SEPARATOR        Lexeme:=
Token:KEYWORD        Lexeme:false
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:endif
Token:KEYWORD        Lexeme:if
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:y
Token:OPERATOR        Lexeme:!=
Token:IDENTIFIERS        Lexeme:z
Token:SEPARATOR        Lexeme:)
Token:IDENTIFIERS        Lexeme:x
Token:SEPARATOR        Lexeme:=
Token:KEYWORD        Lexeme:true
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:else
Token:IDENTIFIERS        Lexeme:y
Token:SEPARATOR        Lexeme:=
Token:REAL        Lexeme:123.45
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:endif
Token:KEYWORD        Lexeme:return
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:SEPARATOR        Lexeme:$
Token:KEYWORD        Lexeme:integer
Token:IDENTIFIERS        Lexeme:low
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:high
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:step
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:get
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:low
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:high
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:step
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:while
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:low
Token:OPERATOR        Lexeme:<=
Token:IDENTIFIERS        Lexeme:high
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:put
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:convertx
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:low
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:IDENTIFIERS        Lexeme:low
Token:SEPARATOR        Lexeme:=
Token:IDENTIFIERS        Lexeme:low
Token:OPERATOR        Lexeme:+
Token:IDENTIFIERS        Lexeme:step
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:SEPARATOR        Lexeme:$
