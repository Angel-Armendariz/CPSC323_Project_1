Token:OPERATOR        Lexeme:/
Token:KEYWORD        Lexeme:function
Token:IDENTIFIERS        Lexeme:bitsToBytes
Token:SEPARATOR        Lexeme:(
Token:KEYWORD        Lexeme:integer
Token:IDENTIFIERS        Lexeme:bits
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:return
Token:INT        Lexeme:8
Token:OPERATOR        Lexeme:*
Token:IDENTIFIERS        Lexeme:bits
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:KEYWORD        Lexeme:function
Token:IDENTIFIERS        Lexeme:bytesToKB
Token:SEPARATOR        Lexeme:(
Token:KEYWORD        Lexeme:integer
Token:IDENTIFIERS        Lexeme:bytes
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:return
Token:INT        Lexeme:1024
Token:OPERATOR        Lexeme:*
Token:IDENTIFIERS        Lexeme:bytes
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:KEYWORD        Lexeme:function
Token:IDENTIFIERS        Lexeme:KBtoMB
Token:SEPARATOR        Lexeme:(
Token:KEYWORD        Lexeme:integer
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:return
Token:INT        Lexeme:1024
Token:OPERATOR        Lexeme:*
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:SEPARATOR        Lexeme:$
Token:KEYWORD        Lexeme:integer
Token:IDENTIFIERS        Lexeme:bits
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:bytes
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:;
Token:OPERATOR        Lexeme:/
Token:KEYWORD        Lexeme:get
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bits
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:bytes
Token:SEPARATOR        Lexeme:,
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:if
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bits
Token:OPERATOR        Lexeme:<
Token:INT        Lexeme
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:return
Token:KEYWORD        Lexeme:false
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:KEYWORD        Lexeme:endif
Token:KEYWORD        Lexeme:while
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bits
Token:OPERATOR        Lexeme:<
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:{
Token:KEYWORD        Lexeme:put
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bitsToBytes
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bits
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:put
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bytesToKB
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:bytes
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:KEYWORD        Lexeme:put
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:KBtoMB
Token:SEPARATOR        Lexeme:(
Token:IDENTIFIERS        Lexeme:KB
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:)
Token:SEPARATOR        Lexeme:;
Token:SEPARATOR        Lexeme:}
Token:SEPARATOR        Lexeme:$
